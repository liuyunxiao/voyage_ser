<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.voyage" />
	<context:property-placeholder
		location="classpath:jdbc.properties,mybatis.properties" />
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.voyage.dao" />
	</bean>

	<!-- dataSource -->
	<!-- bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接数 -->
		<property name="minPoolSize" value="10"/>
		<property name="maxPoolSize" value="50"/>
		<property name="initialPoolSize" value="10"/>
		<property name="acquireIncrement" value="5"/>
		<!-- 关闭时自动提交  -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 连接恢复 -->
		<property name="acquireRetryAttempts" value="0"/>
		<property name="acquireRetryDelay" value="500"/>
		<property name="checkoutTimeout" value="0"/>
		<!-- 连接空闲测试 -->
		<!-- 必须小于mysql设置的超时时间 -->
		<property name="maxIdleTime" value="25000"/>
		<property name="automaticTestTable" value="t_c3p0test" />
		<property name="idleConnectionTestPeriod" value="3600" />
		<!-- 连接缓冲 -->
		<property name="maxStatementsPerConnection" value="100" />
		<!-- 保持不挂  -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!-- 连接返回超时 -->
		<property name="unreturnedConnectionTimeout" value="300"/>
		<property name="debugUnreturnedConnectionStackTraces" value="true"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="${mybatis.configLocation}" />
		<property name="typeAliasesPackage" value="${mybatis.typeAliasesPackage}" />
	</bean>
	<!-- transaction -->
	<tx:annotation-driven />
	<aop:aspectj-autoproxy />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<!--
			<property name="globalRollbackOnParticipationFailure" value="false"
			/>
		-->
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="add*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="create*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="remove*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="put*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />

			<tx:method name="select*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="list*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="count*" read-only="true" propagation="SUPPORTS" />
			<!-- <tx:method name="*" read-only="false" propagation="SUPPORTS"/> -->
			<tx:method name="*" read-only="false" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="servicePointcut"
			expression="execution(* com.voyage.service.impl.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut" />
	</aop:config>

	<!-- 导入系统可配置项 -->
	<import resource="applicationConfig.xml" />
</beans>